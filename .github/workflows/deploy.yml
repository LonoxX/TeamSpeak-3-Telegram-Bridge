name: Build and Deploy

on:
  pull_request:
    branches:
      - main
  workflow_dispatch:

env:
  PLUGIN_NAME: "TelegramBridge"
  INTERNAL_VERSION: 0.0.1

jobs:
  test:
    if: github.event_name == 'pull_request' && github.base_ref == 'main'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get next version
        id: get_version
        uses: thenativeweb/get-next-version@main
        with:
          prefix: 'v'

      - name: Run tests
        run: |
          echo "Running tests for version ${{ steps.get_version.outputs.version }}"
          # make test

  build:
    needs: test
    strategy:
      fail-fast: false
      matrix:
        os: [windows-2025, ubuntu-latest, macos-13]
        arch: [x64, x86]
        exclude:
          - os: ubuntu-latest
            arch: x86
          - os: macos-13
            arch: x86
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Download prebuild
        uses: actions/download-artifact@v4
        with:
          name: prebuild
          path: .

      - name: Setup MSVC (Windows only)
        if: matrix.os == 'windows-2025'
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: ${{ matrix.arch }}
          toolset: 14.0

      - name: Install Qt
        uses: jurplel/install-qt-action@v3
        with:
          version: '5.15.2'
          target: 'desktop'
          arch: >-
            ${{ matrix.os == 'windows-2025' && (matrix.arch == 'x64' && 'win64_msvc2019_64' || 'win32_msvc2019') ||
                matrix.os == 'ubuntu-latest' && 'gcc_64' ||
                matrix.os == 'macos-13' && 'clang_64' }}
          dir: '${{ github.workspace }}'
          cache: true
          cache-key-prefix: ${{ runner.os }}-${{ matrix.arch }}-Qt

      - name: Setup cmake
        uses: jwlawson/actions-setup-cmake@v2

      - name: Build
        run: |
          cmake ${{ matrix.os == 'windows-2025' && '-A' || '' }} ${{ matrix.os == 'windows-2025' && (matrix.arch == 'x64' && 'x64' || 'Win32') || '' }} .
          cmake --build . --config Release

      - name: Rename release (Windows)
        if: matrix.os == 'windows-2025'
        run: |
          mv Release/${{ env.PLUGIN_NAME }}.dll ${{ env.PLUGIN_NAME }}_win${{ matrix.arch == 'x64' && '64' || '32' }}.dll

      - name: Rename release (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          mv lib${{ env.PLUGIN_NAME }}.so ${{ env.PLUGIN_NAME }}_linux_amd64.so

      - name: Rename release (MacOS)
        if: matrix.os == 'macos-13'
        run: |
          mv lib${{ env.PLUGIN_NAME }}.dylib ${{ env.PLUGIN_NAME }}_mac.dylib
          install_name_tool -id ${{ env.PLUGIN_NAME }}_mac.dylib \
            -change @rpath/QtWidgets.framework/Versions/5/QtWidgets @rpath/libQt5Widgets.dylib \
            -change @rpath/QtGui.framework/Versions/5/QtGui @rpath/libQt5Gui.dylib \
            -change @rpath/QtCore.framework/Versions/5/QtCore @rpath/libQt5Core.dylib \
            ${{ env.PLUGIN_NAME }}_mac.dylib

      - name: Archive production artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}${{ matrix.arch }}
          path: ${{ env.PLUGIN_NAME }}_[win|linux|mac]*.*

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download prebuild
        uses: actions/download-artifact@v4
        with:
          name: prebuild
          path: .

      - name: Remove old artifacts
        uses: geekyeggo/delete-artifact@v5
        with:
          name: prebuild

      - name: Create Tmp Folder
        run: mkdir -p tmp

      - name: Collect artifacts
        uses: actions/download-artifact@v4
        with:
          path: tmp

      - name: Move artifacts to release
        run: mv tmp/**/* deploy/plugins/

      - name: Install zip
        uses: montudor/action-zip@v1

      - name: Zip output
        working-directory: deploy
        run: zip -qq -r ../${{ env.PLUGIN_NAME }}.zip .

      - name: Rename release
        run: mv ${{ env.PLUGIN_NAME }}.zip ${{ env.PLUGIN_NAME }}.${{ github.ref_name }}.ts3_plugin

      - name: Set draft flag based on tag
        run: |
          if [[ "$GITHUB_REF" =~ ^refs/tags/v ]]; then
            echo "draft=false" >> $GITHUB_ENV
          else
            echo "draft=true" >> $GITHUB_ENV
          fi

      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          files: ./${{ env.PLUGIN_NAME }}.${{ github.ref_name }}.ts3_plugin
          draft: ${{ env.draft }}
          prerelease: false
